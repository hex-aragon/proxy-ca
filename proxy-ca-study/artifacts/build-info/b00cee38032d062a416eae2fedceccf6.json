{
	"id": "b00cee38032d062a416eae2fedceccf6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"proxy-ca-study/StorageLayout.sol": {
				"content": "pragma solidity ^0.8.20;\n\ncontract StorageLayout {\n\tuint256 foo;\n\tuint256 bar;\n\tuint256[] items;\n\tmapping(uint256 => uint256) values;\n\n\tfunction allocate() public {\n\t\trequire(0 == items.length);\n\t\t// allocate array items\n\t\t//items.length = 3;\n\t\titems[0] = 12;\n\t\titems[1] = 42;\n\t\t// allocate mapping values\n\t\tvalues[0] = 100;\n\t\tvalues[1] = 200;\n\t}\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"proxy-ca-study/StorageLayout.sol": {
				"StorageLayout": {
					"abi": [
						{
							"inputs": [],
							"name": "allocate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"proxy-ca-study/StorageLayout.sol\":26:348  contract StorageLayout {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"proxy-ca-study/StorageLayout.sol\":26:348  contract StorageLayout {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xabaa9916\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"proxy-ca-study/StorageLayout.sol\":136:346  function allocate() public {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"proxy-ca-study/StorageLayout.sol\":180:185  items */\n      0x02\n        /* \"proxy-ca-study/StorageLayout.sol\":180:192  items.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"proxy-ca-study/StorageLayout.sol\":175:176  0 */\n      0x00\n        /* \"proxy-ca-study/StorageLayout.sol\":175:192  0 == items.length */\n      eq\n        /* \"proxy-ca-study/StorageLayout.sol\":167:193  require(0 == items.length) */\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n        /* \"proxy-ca-study/StorageLayout.sol\":256:258  12 */\n      0x0c\n        /* \"proxy-ca-study/StorageLayout.sol\":245:250  items */\n      0x02\n        /* \"proxy-ca-study/StorageLayout.sol\":251:252  0 */\n      0x00\n        /* \"proxy-ca-study/StorageLayout.sol\":245:253  items[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_8\n      jumpi\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n    tag_8:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"proxy-ca-study/StorageLayout.sol\":245:258  items[0] = 12 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"proxy-ca-study/StorageLayout.sol\":273:275  42 */\n      0x2a\n        /* \"proxy-ca-study/StorageLayout.sol\":262:267  items */\n      0x02\n        /* \"proxy-ca-study/StorageLayout.sol\":268:269  1 */\n      0x01\n        /* \"proxy-ca-study/StorageLayout.sol\":262:270  items[1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_12\n      jumpi\n      tag_13\n      tag_10\n      jump\t// in\n    tag_13:\n    tag_12:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"proxy-ca-study/StorageLayout.sol\":262:275  items[1] = 42 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"proxy-ca-study/StorageLayout.sol\":320:323  100 */\n      0x64\n        /* \"proxy-ca-study/StorageLayout.sol\":308:314  values */\n      0x03\n        /* \"proxy-ca-study/StorageLayout.sol\":308:317  values[0] */\n      0x00\n        /* \"proxy-ca-study/StorageLayout.sol\":315:316  0 */\n      dup1\n        /* \"proxy-ca-study/StorageLayout.sol\":308:317  values[0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"proxy-ca-study/StorageLayout.sol\":308:323  values[0] = 100 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"proxy-ca-study/StorageLayout.sol\":339:342  200 */\n      0xc8\n        /* \"proxy-ca-study/StorageLayout.sol\":327:333  values */\n      0x03\n        /* \"proxy-ca-study/StorageLayout.sol\":327:336  values[1] */\n      0x00\n        /* \"proxy-ca-study/StorageLayout.sol\":334:335  1 */\n      0x01\n        /* \"proxy-ca-study/StorageLayout.sol\":327:336  values[1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"proxy-ca-study/StorageLayout.sol\":327:342  values[1] = 200 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"proxy-ca-study/StorageLayout.sol\":136:346  function allocate() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:187   */\n    tag_10:\n        /* \"#utility.yul\":55:132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":52:53   */\n      0x00\n        /* \"#utility.yul\":45:133   */\n      mstore\n        /* \"#utility.yul\":152:156   */\n      0x32\n        /* \"#utility.yul\":149:150   */\n      0x04\n        /* \"#utility.yul\":142:157   */\n      mstore\n        /* \"#utility.yul\":176:180   */\n      0x24\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:181   */\n      revert\n\n    auxdata: 0xa2646970667358221220008e11bf86b905906ed352cab79e6b7f78e1616f87dc75371927ad2b0a982ee664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101148061001c5f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c8063abaa991614602a575b5f80fd5b60306032565b005b6002805490505f146041575f80fd5b600c60025f81548110605457605360b1565b5b905f5260205f200181905550602a6002600181548110607457607360b1565b5b905f5260205f200181905550606460035f8081526020019081526020015f208190555060c860035f600181526020019081526020015f2081905550565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffdfea2646970667358221220008e11bf86b905906ed352cab79e6b7f78e1616f87dc75371927ad2b0a982ee664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xABAA9916 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x32 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH0 EQ PUSH1 0x41 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x2 PUSH0 DUP2 SLOAD DUP2 LT PUSH1 0x54 JUMPI PUSH1 0x53 PUSH1 0xB1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2A PUSH1 0x2 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH1 0x74 JUMPI PUSH1 0x73 PUSH1 0xB1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x3 PUSH0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xC8 PUSH1 0x3 PUSH0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP15 GT 0xBF DUP7 0xB9 SDIV SWAP1 PUSH15 0xD352CAB79E6B7F78E1616F87DC7537 NOT 0x27 0xAD 0x2B EXP SWAP9 0x2E 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "26:322:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@allocate_47": {
									"entryPoint": 50,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 177,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:190:1",
										"nodeType": "YulBlock",
										"src": "0:190:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:1",
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:1",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:1",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nativeSrc": "45:88:1",
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nativeSrc": "45:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:1",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:1",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nativeSrc": "142:15:1",
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nativeSrc": "142:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:1",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:1",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nativeSrc": "166:15:1",
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nativeSrc": "166:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106026575f3560e01c8063abaa991614602a575b5f80fd5b60306032565b005b6002805490505f146041575f80fd5b600c60025f81548110605457605360b1565b5b905f5260205f200181905550602a6002600181548110607457607360b1565b5b905f5260205f200181905550606460035f8081526020019081526020015f208190555060c860035f600181526020019081526020015f2081905550565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffdfea2646970667358221220008e11bf86b905906ed352cab79e6b7f78e1616f87dc75371927ad2b0a982ee664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xABAA9916 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x32 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH0 EQ PUSH1 0x41 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x2 PUSH0 DUP2 SLOAD DUP2 LT PUSH1 0x54 JUMPI PUSH1 0x53 PUSH1 0xB1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2A PUSH1 0x2 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH1 0x74 JUMPI PUSH1 0x73 PUSH1 0xB1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x3 PUSH0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xC8 PUSH1 0x3 PUSH0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP15 GT 0xBF DUP7 0xB9 SDIV SWAP1 PUSH15 0xD352CAB79E6B7F78E1616F87DC7537 NOT 0x27 0xAD 0x2B EXP SWAP9 0x2E 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "26:322:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;136:210;;;:::i;:::-;;;180:5;:12;;;;175:1;:17;167:26;;;;;;256:2;245:5;251:1;245:8;;;;;;;;:::i;:::-;;;;;;;;;:13;;;;273:2;262:5;268:1;262:8;;;;;;;;:::i;:::-;;;;;;;;;:13;;;;320:3;308:6;:9;315:1;308:9;;;;;;;;;;;:15;;;;339:3;327:6;:9;334:1;327:9;;;;;;;;;;;:15;;;;136:210::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "55200",
								"executionCost": "103",
								"totalCost": "55303"
							},
							"external": {
								"allocate()": "95214"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 348,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 348,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 348,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 348,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 348,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 348,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 348,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 348,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 348,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 348,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 348,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 348,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 348,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220008e11bf86b905906ed352cab79e6b7f78e1616f87dc75371927ad2b0a982ee664736f6c634300081a0033",
									".code": [
										{
											"begin": 26,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26,
											"end": 348,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 348,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26,
											"end": 348,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "ABAA9916"
										},
										{
											"begin": 26,
											"end": 348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26,
											"end": 348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 136,
											"end": 346,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 136,
											"end": 346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 136,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 136,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 136,
											"end": 346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 136,
											"end": 346,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 136,
											"end": 346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 136,
											"end": 346,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 136,
											"end": 346,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 136,
											"end": 346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 185,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 180,
											"end": 192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 180,
											"end": 192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 175,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 192,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 167,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 167,
											"end": 193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 167,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 193,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 167,
											"end": 193,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 167,
											"end": 193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 256,
											"end": 258,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 245,
											"end": 250,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 245,
											"end": 253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 245,
											"end": 253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 245,
											"end": 253,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 245,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 245,
											"end": 253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 245,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 245,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 245,
											"end": 253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 245,
											"end": 253,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 245,
											"end": 253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 245,
											"end": 253,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 245,
											"end": 253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 245,
											"end": 253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 245,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 245,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 253,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 245,
											"end": 253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 245,
											"end": 258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 245,
											"end": 258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 245,
											"end": 258,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 245,
											"end": 258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 275,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 262,
											"end": 267,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 268,
											"end": 269,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 270,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 270,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 262,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 262,
											"end": 270,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 262,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 262,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 262,
											"end": 270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 270,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 262,
											"end": 270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 270,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 262,
											"end": 270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 262,
											"end": 270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 262,
											"end": 270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 270,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 262,
											"end": 270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 275,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 262,
											"end": 275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 320,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 308,
											"end": 314,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 308,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 308,
											"end": 317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 308,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 308,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 308,
											"end": 317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 308,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 308,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 317,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 308,
											"end": 323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 308,
											"end": 323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 323,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 308,
											"end": 323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 339,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "C8"
										},
										{
											"begin": 327,
											"end": 333,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 327,
											"end": 336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 327,
											"end": 336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 327,
											"end": 336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 327,
											"end": 336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 327,
											"end": 336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 327,
											"end": 336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 327,
											"end": 336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 327,
											"end": 336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 327,
											"end": 336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 327,
											"end": 336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 336,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 327,
											"end": 342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 327,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 342,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 327,
											"end": 342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 136,
											"end": 346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 45,
											"end": 133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 181,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"proxy-ca-study/StorageLayout.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allocate()": "abaa9916"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"proxy-ca-study/StorageLayout.sol\":\"StorageLayout\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"proxy-ca-study/StorageLayout.sol\":{\"keccak256\":\"0xbde604ac05855ed78fb8d2abeda7c05502df82c9b968ae467243737a4d3e2dc4\",\"urls\":[\"bzz-raw://d506ad08c38847d1bc20e53a0e12e61dbfdea6b57617df96b368eff5279cfa71\",\"dweb:/ipfs/QmenKdHpEf1yFBRzqDyGqhW8VLywnWAihSNMHhkqX1Ynav\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "proxy-ca-study/StorageLayout.sol:StorageLayout",
								"label": "foo",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "proxy-ca-study/StorageLayout.sol:StorageLayout",
								"label": "bar",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "proxy-ca-study/StorageLayout.sol:StorageLayout",
								"label": "items",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 12,
								"contract": "proxy-ca-study/StorageLayout.sol:StorageLayout",
								"label": "values",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> proxy-ca-study/StorageLayout.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "proxy-ca-study/StorageLayout.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"proxy-ca-study/StorageLayout.sol": {
				"ast": {
					"absolutePath": "proxy-ca-study/StorageLayout.sol",
					"exportedSymbols": {
						"StorageLayout": [
							48
						]
					},
					"id": 49,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageLayout",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 48,
							"linearizedBaseContracts": [
								48
							],
							"name": "StorageLayout",
							"nameLocation": "35:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "foo",
									"nameLocation": "60:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "52:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "52:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "bar",
									"nameLocation": "74:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "66:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "66:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "items",
									"nameLocation": "90:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "80:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 6,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "80:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 7,
										"nodeType": "ArrayTypeName",
										"src": "80:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "values",
									"nameLocation": "126:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "98:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 11,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 9,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "106:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "98:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 10,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "117:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "163:183:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "30",
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "175:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 17,
																	"name": "items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "180:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "186:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "180:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "175:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 15,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "167:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "167:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "167:26:0"
											},
											{
												"expression": {
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 22,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "245:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 24,
														"indexExpression": {
															"hexValue": "30",
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "251:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "245:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3132",
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "256:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "245:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "245:13:0"
											},
											{
												"expression": {
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 28,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "262:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 30,
														"indexExpression": {
															"hexValue": "31",
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "268:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "262:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3432",
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "273:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_42_by_1",
															"typeString": "int_const 42"
														},
														"value": "42"
													},
													"src": "262:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "262:13:0"
											},
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 34,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "308:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 36,
														"indexExpression": {
															"hexValue": "30",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "315:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "308:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "320:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "308:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "308:15:0"
											},
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 40,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 42,
														"indexExpression": {
															"hexValue": "31",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "334:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "327:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "339:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "327:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "327:15:0"
											}
										]
									},
									"functionSelector": "abaa9916",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allocate",
									"nameLocation": "145:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "153:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:0:0"
									},
									"scope": 48,
									"src": "136:210:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 49,
							"src": "26:322:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:349:0"
				},
				"id": 0
			}
		}
	}
}