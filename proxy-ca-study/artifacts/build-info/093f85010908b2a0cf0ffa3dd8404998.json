{
	"id": "093f85010908b2a0cf0ffa3dd8404998",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"proxy-ca-study/proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\ncontract Implementation {\n  bytes32 internal constant _IMPLEMENTATION_SLOT = bytes32(uint256(\n    keccak256('eip1967.proxy.implementation')) - 1\n  );\n}\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"proxy-ca-study/proxy.sol": {
				"Implementation": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"proxy-ca-study/proxy.sol\":125:276  contract Implementation {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"proxy-ca-study/proxy.sol\":125:276  contract Implementation {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122036aea6598a799637544828ea18cf4b94b1e128e7ad71054bd54455165236c0d864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea264697066735822122036aea6598a799637544828ea18cf4b94b1e128e7ad71054bd54455165236c0d864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0xAE 0xA6 MSIZE DUP11 PUSH26 0x9637544828EA18CF4B94B1E128E7AD71054BD54455165236C0D8 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "125:151:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea264697066735822122036aea6598a799637544828ea18cf4b94b1e128e7ad71054bd54455165236c0d864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0xAE 0xA6 MSIZE DUP11 PUSH26 0x9637544828EA18CF4B94B1E128E7AD71054BD54455165236C0D8 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "125:151:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 125,
									"end": 276,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 125,
									"end": 276,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 125,
									"end": 276,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 125,
									"end": 276,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 125,
									"end": 276,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 125,
									"end": 276,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 125,
									"end": 276,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 276,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 125,
									"end": 276,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 276,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 125,
									"end": 276,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 125,
									"end": 276,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 276,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 125,
									"end": 276,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 125,
									"end": 276,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 276,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 125,
									"end": 276,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 276,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 276,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 125,
									"end": 276,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 276,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122036aea6598a799637544828ea18cf4b94b1e128e7ad71054bd54455165236c0d864736f6c634300081a0033",
									".code": [
										{
											"begin": 125,
											"end": 276,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 125,
											"end": 276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 125,
											"end": 276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 125,
											"end": 276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 125,
											"end": 276,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"proxy-ca-study/proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"proxy-ca-study/proxy.sol\":\"Implementation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"proxy-ca-study/proxy.sol\":{\"keccak256\":\"0x2fc49c159b0eb33f1b09a94b68e458bc2a965609e7d5bff9e7d878230cf79731\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ac07858ebd62f2bab5268a77272051d16d9880c0b7eb94c56be6ca089acc3ee\",\"dweb:/ipfs/QmPmRBzuuiGYN1f8vmyKehhEdqRZRRfSfzRLzAW2YskYyW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"proxy-ca-study/proxy.sol\":\"Proxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"proxy-ca-study/proxy.sol\":{\"keccak256\":\"0x2fc49c159b0eb33f1b09a94b68e458bc2a965609e7d5bff9e7d878230cf79731\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ac07858ebd62f2bab5268a77272051d16d9880c0b7eb94c56be6ca089acc3ee\",\"dweb:/ipfs/QmPmRBzuuiGYN1f8vmyKehhEdqRZRRfSfzRLzAW2YskYyW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"proxy-ca-study/proxy.sol": {
				"ast": {
					"absolutePath": "proxy-ca-study/proxy.sol",
					"exportedSymbols": {
						"Implementation": [
							15
						],
						"Proxy": [
							49
						]
					},
					"id": 50,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Implementation",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 15,
							"linearizedBaseContracts": [
								15
							],
							"name": "Implementation",
							"nameLocation": "134:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 14,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "179:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 15,
									"src": "153:120:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "153:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 12,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
																	"id": 8,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "233:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																		"typeString": "literal_string \"eip1967.proxy.implementation\""
																	},
																	"value": "eip1967.proxy.implementation"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																		"typeString": "literal_string \"eip1967.proxy.implementation\""
																	}
																],
																"id": 7,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "223:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "223:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 6,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "210:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 5,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "210:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "210:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "-",
												"rightExpression": {
													"hexValue": "31",
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "268:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"src": "210:59:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 4,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "202:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 3,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "202:7:0",
												"typeDescriptions": {}
											}
										},
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "202:71:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 50,
							"src": "125:151:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 16,
								"nodeType": "StructuredDocumentation",
								"src": "278:598:0",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 49,
							"linearizedBaseContracts": [
								49
							],
							"name": "Proxy",
							"nameLocation": "895:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "1162:835:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1181:810:0",
													"nodeType": "YulBlock",
													"src": "1181:810:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1434:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1434:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1437:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1437:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1440:12:0",
																			"nodeType": "YulIdentifier",
																			"src": "1440:12:0"
																		},
																		"nativeSrc": "1440:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1440:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1421:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "1421:12:0"
																},
																"nativeSrc": "1421:34:0",
																"nodeType": "YulFunctionCall",
																"src": "1421:34:0"
															},
															"nativeSrc": "1421:34:0",
															"nodeType": "YulExpressionStatement",
															"src": "1421:34:0"
														},
														{
															"nativeSrc": "1582:74:0",
															"nodeType": "YulVariableDeclaration",
															"src": "1582:74:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "1609:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "1609:3:0"
																		},
																		"nativeSrc": "1609:5:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1609:5:0"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "1616:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "1616:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1632:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1632:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1635:12:0",
																			"nodeType": "YulIdentifier",
																			"src": "1635:12:0"
																		},
																		"nativeSrc": "1635:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1635:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1651:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1651:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1654:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1654:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "1596:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "1596:12:0"
																},
																"nativeSrc": "1596:60:0",
																"nodeType": "YulFunctionCall",
																"src": "1596:60:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "1586:6:0",
																	"nodeType": "YulTypedName",
																	"src": "1586:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1724:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1724:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1727:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1727:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "1730:14:0",
																			"nodeType": "YulIdentifier",
																			"src": "1730:14:0"
																		},
																		"nativeSrc": "1730:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1730:16:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "1709:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "1709:14:0"
																},
																"nativeSrc": "1709:38:0",
																"nodeType": "YulFunctionCall",
																"src": "1709:38:0"
															},
															"nativeSrc": "1709:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "1709:38:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1842:59:0",
																		"nodeType": "YulBlock",
																		"src": "1842:59:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1867:1:0",
																							"nodeType": "YulLiteral",
																							"src": "1867:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1870:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "1870:14:0"
																							},
																							"nativeSrc": "1870:16:0",
																							"nodeType": "YulFunctionCall",
																							"src": "1870:16:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "1860:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "1860:6:0"
																					},
																					"nativeSrc": "1860:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "1860:27:0"
																				},
																				"nativeSrc": "1860:27:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "1860:27:0"
																			}
																		]
																	},
																	"nativeSrc": "1835:66:0",
																	"nodeType": "YulCase",
																	"src": "1835:66:0",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1840:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1840:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1922:59:0",
																		"nodeType": "YulBlock",
																		"src": "1922:59:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1947:1:0",
																							"nodeType": "YulLiteral",
																							"src": "1947:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1950:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "1950:14:0"
																							},
																							"nativeSrc": "1950:16:0",
																							"nodeType": "YulFunctionCall",
																							"src": "1950:16:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "1940:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "1940:6:0"
																					},
																					"nativeSrc": "1940:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "1940:27:0"
																				},
																				"nativeSrc": "1940:27:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "1940:27:0"
																			}
																		]
																	},
																	"nativeSrc": "1914:67:0",
																	"nodeType": "YulCase",
																	"src": "1914:67:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "1768:6:0",
																"nodeType": "YulIdentifier",
																"src": "1768:6:0"
															},
															"nativeSrc": "1761:220:0",
															"nodeType": "YulSwitch",
															"src": "1761:220:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 19,
														"isOffset": false,
														"isSlot": false,
														"src": "1616:14:0",
														"valueSize": 1
													}
												],
												"id": 22,
												"nodeType": "InlineAssembly",
												"src": "1172:819:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "907:190:0",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "1111:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1129:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1121:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1120:24:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1162:0:0"
									},
									"scope": 49,
									"src": "1102:895:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "2003:173:0",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."
									},
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2190:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2205:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "2239:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2238:9:0"
									},
									"scope": 49,
									"src": "2181:67:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2514:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 35,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "2534:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2534:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 34,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "2524:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2524:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2524:28:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2254:217:0",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2485:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2514:0:0"
									},
									"scope": 49,
									"src": "2476:83:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "2792:28:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 44,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "2802:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2802:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "2802:11:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2565:186:0",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 48,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2792:0:0"
									},
									"scope": 49,
									"src": "2756:64:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 50,
							"src": "877:1945:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:2723:0"
				},
				"id": 0
			}
		}
	}
}